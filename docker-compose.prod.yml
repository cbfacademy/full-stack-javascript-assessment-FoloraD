version: "3"
services:
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    image: backend-local-prod:production-v8 #Update version number
    env_file: 
      - ./.env.local # file with BACKEND_BASE_URL
    volumes:
      - ./packages/backend:/app

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=prod
    ports:
      - "3000:3000"
    depends_on:
      - backend
    image: frontend-local:production-v15  #Update version number
    env_file: 
      - ./packages/frontend/.env.prod.frontend
    volumes:
      - ./packages/frontend:/app
  



# 1. STOP & REMOVE EXISTING CONTAINERS
# docker-compose -f docker-compose.prod.yml down

# 2. BUILD NEW DOCKER IMAGE
# docker-compose -f docker-compose.prod.yml build --build-arg NODE_ENV=prod

# 3. START NEW CONTAINERS BASED ON THE UPDATED IMAGE
# docker-compose -f docker-compose.prod.yml up -d

# VIEW LOGS OF SERVICES
# docker-compose -f docker-compose.prod.yml logs

#Verify Docker Images
# docker images